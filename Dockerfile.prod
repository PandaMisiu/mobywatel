# Multi-stage build for production optimization
FROM maven:3.9.6-eclipse-temurin-21-alpine AS build

# Set working directory
WORKDIR /app

# Copy pom.xml first for better layer caching
COPY pom.xml .

# Download dependencies (cached layer if pom.xml unchanged)
RUN mvn dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application (skip tests for production build)
RUN mvn clean package -DskipTests -B

# Production stage with minimal JRE
FROM eclipse-temurin:21-jre-alpine

# Create non-root user for security
RUN addgroup -g 1001 -S spring && adduser -S spring -G spring

# Set working directory
WORKDIR /app

# Install curl for health checks
RUN apk add --no-cache curl

# Copy the built JAR from build stage
COPY --from=build /app/target/*.jar app.jar

# Change ownership to non-root user
RUN chown spring:spring app.jar

# Switch to non-root user
USER spring

# Expose port
EXPOSE 8080

# JVM optimization for production with Java 21
ENV JAVA_OPTS="-Xmx512m -Xms512m -XX:+UseZGC -XX:+UseContainerSupport -Djava.security.egd=file:/dev/./urandom -XX:+UnlockExperimentalVMOptions"

# Run the application with minimal logging
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]